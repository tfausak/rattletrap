name: ci
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - created
jobs:

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu
            ghc: 9.0.2
          - os: macos
            ghc: 9.0.2
          - os: windows
            ghc: 9.0.2
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    steps:

      - uses: actions/checkout@v2

      - id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}

      - run: cabal configure --enable-tests --flags pedantic --flags optimize --flags strict --jobs --test-show-details direct

      - run: cabal freeze && cat cabal.project.freeze

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: ${{ matrix.os }}-${{ matrix.ghc }}-

      - run: cabal build

      - run: cabal test --test-options '+RTS -s -RTS'

      - run: npm install ajv-cli

      - run: cabal exec runghc src/util/check-schema.hs

      - run: cabal check

      - run: mkdir artifact

      - run: mkdir artifact/${{ matrix.os }}

      - run: cabal sdist --output-dir artifact/${{ matrix.os }}

      - run: cabal exec runghc src/util/copy-executable.hs artifact/${{ matrix.os }}

      - uses: svenstaro/upx-action@v2
        with:
          file: artifact/${{ matrix.os }}/rattletrap
          args: --best

      - run: cp output/schema.json artifact/${{ matrix.os }}

      - uses: actions/upload-artifact@v2
        with:
          name: rattletrap-${{ github.sha }}
          path: artifact

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: rattletrap-${{ github.sha }}
          path: artifact

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-ubuntu
          asset_path: artifact/ubuntu/rattletrap
          upload_url: ${{ github.event.release.upload_url }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-macos
          asset_path: artifact/macos/rattletrap
          upload_url: ${{ github.event.release.upload_url }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: rattletrap-${{ github.event.release.tag_name }}-windows.exe
          asset_path: artifact/windows/rattletrap
          upload_url: ${{ github.event.release.upload_url }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/gzip
          asset_name: rattletrap-${{ github.event.release.tag_name }}.tar.gz
          asset_path: artifact/ubuntu/rattletrap-${{ github.event.release.tag_name }}.tar.gz
          upload_url: ${{ github.event.release.upload_url }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/json
          asset_name: rattletrap-${{ github.event.release.tag_name }}-schema.json
          asset_path: artifact/ubuntu/schema.json
          upload_url: ${{ github.event.release.upload_url }}

      - run: cabal upload --publish --username '${{ secrets.HACKAGE_USERNAME }}' --password '${{ secrets.HACKAGE_PASSWORD }}' artifact/ubuntu/rattletrap-${{ github.event.release.tag_name }}.tar.gz

      - run: mv artifact/ubuntu/rattletrap docker/rattletrap

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v2
        with:
          context: docker
          file: docker/Dockerfile
          tags: taylorfausak/rattletrap:${{ github.event.release.tag_name }}
          push: true
